<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mark Attendance</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .attendance-form {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .status-present {
            background-color: #d4edda;
        }
        .status-absent {
            background-color: #f8d7da;
        }
        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
        }
        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
        }
        .form-section {
            margin-bottom: 30px;
        }
        #studentsTable {
            display: none;
        }
        .loading-spinner {
            display: none;
            text-align: center;
            padding: 20px;
        }
    </style>
</head>
<body class="bg-light">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4">
        <div class="container">
            <a class="navbar-brand" href="/teacher/dashboard">
                <i class="fas fa-calendar-check me-2"></i>Attendance System
            </a>
            <div class="d-flex">
                <span class="navbar-text me-3 d-none d-sm-block">
                    <i class="fas fa-user me-1"></i> <%= teacher.name %>
                </span>
                <a href="/login" class="btn btn-outline-light">
                    <i class="fas fa-sign-out-alt me-1"></i> Logout
                </a>
            </div>
        </div>
    </nav>
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="attendance-form">
                    <div class="d-flex justify-content-between align-items-center mb-5">
                        <h1 class="mb-0">
                            <i class="fas fa-clipboard-check text-primary me-2"></i>
                            Mark Attendance
                        </h1>
                        <a href="/view-attendance" class="btn btn-outline-secondary">
                            <i class="fas fa-list me-2"></i>View Records
                        </a>
                    </div>

                    <form id="attendanceForm">
                        <div class="row g-3 form-section">
                            <div class="col-md-4">
                                <label for="date" class="form-label">Date</label>
                                <input type="date" id="date" name="date" 
                                       class="form-control" required>
                            </div>
                            
                            <div class="col-md-4">
                                <label class="form-label">Teacher</label>
                                <input type="text" class="form-control" value="<%= teacher.name %>" disabled>
                                <input type="hidden" name="teacherId" value="<%= teacher._id %>">
                              </div>
                              
                            
                            <div class="col-md-4">
                                <label for="subject" class="form-label">Subject</label>
                                <select id="subject" name="subjectId" class="form-select" required>
                                    <option value="">Select Subject</option>
                                    <% subjects.forEach(subject => { %>
                                        <option value="<%= subject._id %>">
                                            <%= subject.name %> (<%= subject.code %>)
                                        </option>
                                    <% }); %>
                                </select>
                            </div>
                        </div>

                        <div class="row g-3 form-section">
                            <div class="col-md-4">
                                <label for="batch" class="form-label">Batch</label>
                                <select id="batch" name="batchId" class="form-select" required>
                                    <option value="">Select Batch</option>
                                    <% batches.forEach(batch => { %>
                                        <option value="<%= batch._id %>">
                                            <%= batch.name %> (<%= batch.year %>)
                                        </option>
                                    <% }); %>
                                </select>
                            </div>
                        </div>

                        <div class="form-section">
                            <h2 class="h4 mb-4">
                                <i class="fas fa-users-class me-2"></i>
                                Student Attendance
                            </h2>
                            
                            <div class="loading-spinner" id="loadingSpinner">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                                <p class="mt-2">Loading students...</p>
                            </div>
                            
                            <div class="table-responsive" id="studentsTable">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>ER Number</th>
                                            <th>Name</th>
                                            <th>Status</th>
                                            <th>Remarks</th>
                                        </tr>
                                    </thead>
                                    <tbody id="studentsTableBody">
                                        <!-- Students will be loaded here dynamically -->
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Submit Attendance
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap 5 JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.getElementById('batch').addEventListener('change', async function() {
            const batchId = this.value;
            const studentsTable = document.getElementById('studentsTable');
            const loadingSpinner = document.getElementById('loadingSpinner');
            const studentsTableBody = document.getElementById('studentsTableBody');
            
            if (!batchId) {
                studentsTable.style.display = 'none';
                return;
            }
            
            // Show loading spinner
            loadingSpinner.style.display = 'block';
            studentsTable.style.display = 'none';
            
            try {
                // Fetch students for the selected batch
                const response = await fetch(`/get-batch-students?batchId=${batchId}`);
                if (response.ok) {
                    const students = await response.json();
                    
                    // Clear previous students
                    studentsTableBody.innerHTML = '';
                    
                    // Add new students to the table
                    students.forEach(student => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${student.er_number}</td>
                            <td>${student.name}</td>
                            <td>
                                <select name="attendanceData[${student._id}][status]" 
                                        class="form-select status-select" required>
                                    <option value="Present" selected>Present</option>
                                    <option value="Absent">Absent</option>
                                </select>
                            </td>
                            <td>
                                <input type="text" 
                                       name="attendanceData[${student._id}][remarks]" 
                                       class="form-control" 
                                       placeholder="Remarks">
                            </td>
                        `;
                        studentsTableBody.appendChild(row);
                    });
                    
                    // Hide loading spinner and show table
                    loadingSpinner.style.display = 'none';
                    studentsTable.style.display = 'block';
                } else {
                    throw new Error('Failed to load students');
                }
            } catch (error) {
                console.error('Error loading students:', error);
                loadingSpinner.style.display = 'none';
                alert('Error loading students. Please try again.');
            }
        });

        document.getElementById('attendanceForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {
                date: formData.get('date'),
                subjectId: formData.get('subjectId'),
                teacherId: formData.get('teacherId'),
                batchId: formData.get('batchId'),
                attendanceData: {}
            };
            
            // Collect all student attendance data
            document.querySelectorAll('[name^="attendanceData"]').forEach(input => {
                const match = input.name.match(/attendanceData\[(.+?)\]\[(.+?)\]/);
                if (match) {
                    const studentId = match[1];
                    const field = match[2];
                    
                    if (!data.attendanceData[studentId]) {
                        data.attendanceData[studentId] = {};
                    }
                    
                    data.attendanceData[studentId][field] = input.value;
                }
            });
            
            try {
                const response = await fetch('/submit-attendance', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    window.location.href = '/attendance-success';
                } else {
                    const error = await response.text();
                    alert(`Error: ${error}`);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error submitting attendance. Please try again.');
            }
        });

        // Add dynamic row highlighting based on status selection
        document.addEventListener('change', function(e) {
            if (e.target && e.target.matches('.status-select')) {
                const row = e.target.closest('tr');
                if (e.target.value === 'Present') {
                    row.classList.add('status-present');
                    row.classList.remove('status-absent');
                } else {
                    row.classList.add('status-absent');
                    row.classList.remove('status-present');
                }
            }
        });
    </script>
</body>
</html>